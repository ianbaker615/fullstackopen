{"version":3,"sources":["services/contacts.js","components/Notification.js","components/NewUserForm.js","components/Contact.js","components/Contacts.js","App.js","index.js"],"names":["baseUrl","contactService","getAll","axios","get","then","res","data","create","newObject","post","update","id","put","remove","delete","Notification","message","msg","nameOfClass","className","NewUserForm","props","onSubmit","addContact","value","newContact","onChange","handleContactChange","newPhone","handlePhoneChange","type","Contact","contact","handleDelete","contacts","name","phone","onClick","Contacts","search","filteredContacts","filter","toLowerCase","includes","map","App","useState","setContacts","setNewContact","setNewPhone","setSearch","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","initialContacts","e","target","preventDefault","some","originalContact","find","window","confirm","changedContact","setTimeout","catch","error","c","contactObject","uuidv4","createdContact","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b61917b.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((res) => res.data);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject).then((res) => res.data);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject).then((res) => res.data);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst contactService = {\n  getAll,\n  create,\n  update,\n  remove,\n};\n\nexport default contactService;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  const msg = message[0];\n  const flag = message[1];\n  const nameOfClass = flag === false ? \"error\" : \"success\";\n\n  return <div className={nameOfClass}>{msg}</div>;\n};\nexport default Notification;\n","import React from \"react\";\n\nconst NewUserForm = (props) => {\n  return (\n    <form onSubmit={props.addContact}>\n      <div>\n        name:{\" \"}\n        <input value={props.newContact} onChange={props.handleContactChange} />\n      </div>\n      <div>\n        phone number:{\" \"}\n        <input value={props.newPhone} onChange={props.handlePhoneChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewUserForm;\n","import React from \"react\";\n\nconst Contact = ({ contact, contacts, handleDelete }) => {\n  return (\n    <li>\n      {contact.name} {contact.phone}{\" \"}\n      <button onClick={handleDelete}>Delete</button>\n    </li>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport Contact from \"./Contact\";\n\nconst Contacts = ({ contacts, search, handleDelete }) => {\n  // filtering for contacts\n  const filteredContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(search.toLowerCase())\n  );\n  return (\n    <ul>\n      {filteredContacts.map((contact) => (\n        <Contact\n          key={contact.id}\n          contact={contact}\n          contacts={contacts}\n          handleDelete={() => handleDelete(contact.id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","import React, { useState, useEffect } from \"react\";\nimport contactService from \"./services/contacts\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Notification from \"./components/Notification\";\nimport NewUserForm from \"./components/NewUserForm\";\nimport Contacts from \"./components/Contacts\";\n\nconst App = () => {\n  // state\n  const [contacts, setContacts] = useState([]);\n  const [newContact, setNewContact] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  // hooks\n  useEffect(() => {\n    contactService.getAll().then((initialContacts) => {\n      setContacts(initialContacts);\n    });\n  }, []);\n\n  // event handlers\n  const handleDelete = (id) => {\n    const contact = contacts.find((contact) => contact.id === id);\n    if (window.confirm(`Delete ${contact.name}? from phonebook?`)) {\n      contactService.remove(contact.id).then(() => {\n        setContacts(contacts.filter((c) => c.id !== contact.id));\n      });\n    }\n  };\n  const addContact = (e) => {\n    // prevent form submission on change\n    e.preventDefault();\n    // check if name already in phonebook\n    if (contacts.some((contact) => contact.name === newContact)) {\n      const originalContact = contacts.find(\n        (contact) => contact.name === newContact\n      );\n      if (\n        window.confirm(\n          `Contact ${originalContact.name} already in phonebook. Replace old number with new number?`\n        )\n      ) {\n        const id = originalContact.id;\n        const changedContact = { ...originalContact, phone: newPhone };\n        contactService\n          .update(id, changedContact)\n          .then((changedContact) => {\n            setContacts(\n              contacts.map((contact) =>\n                contact.id !== id ? contact : changedContact\n              )\n            );\n            setNewContact(\"\");\n            setNewPhone(\"\");\n            // show success message for a few seconds\n            setSuccessMessage(\n              `Successfully updated ${changedContact.name}'s number from ${originalContact.phone} to ${changedContact.phone}`\n            );\n            setTimeout(() => {\n              setSuccessMessage(null);\n            }, 5000);\n          })\n          .catch((error) => {\n            setErrorMessage(\n              `Information for ${changedContact.name} has already been deleted from server`\n            );\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n            setContacts(contacts.filter((c) => c.id !== id));\n          });\n      }\n    } else {\n      // build contact object\n      const contactObject = {\n        name: newContact,\n        phone: newPhone,\n        id: uuidv4(),\n      };\n      // add new contact to json-server and update state\n      contactService.create(contactObject).then((createdContact) => {\n        setContacts(contacts.concat(createdContact));\n        setNewContact(\"\");\n        setNewPhone(\"\");\n        // show success message for a few seconds\n        setSuccessMessage(`Added ${createdContact.name} to phonebook`);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000);\n      });\n    }\n  };\n  const handleContactChange = (e) => {\n    setNewContact(e.target.value);\n  };\n  const handlePhoneChange = (e) => {\n    setNewPhone(e.target.value);\n  };\n  const handleSearchChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const checkMessage = () => {\n    if (successMessage) {\n      return [successMessage, true];\n    } else if (errorMessage) {\n      return [errorMessage, false];\n    } else {\n      return null;\n    }\n  };\n\n  // the html that is returned\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={checkMessage()} />\n      <hr />\n      <div>\n        Search: <input value={search} onChange={handleSearchChange} />\n      </div>\n      <hr />\n      <NewUserForm\n        addContact={addContact}\n        newContact={newContact}\n        newPhone={newPhone}\n        handleContactChange={handleContactChange}\n        handlePhoneChange={handlePhoneChange}\n      />\n      <hr />\n      <h2>Contacts</h2>\n      <Contacts\n        contacts={contacts}\n        search={search}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}